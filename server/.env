PORT=5000
JWT_SECRET=yourVerySecretKey
CLIENT_URL=http://localhost:3000

# mongodb configuration
MONGO_URI=mongodb+srv://codngwthubaid:0U0NUrDo5Xi3ZhRa@cluster0.3tnuk6d.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0

# subscription customer configuration
SUBSCRIPTION_CUSTOMER_EMAIL=customer@billmint.com
SUBSCRIPTION_CUSTOMER_PASSWORD=Ubaid123

# master admin configuration
MASTER_ADMIN_EMAIL=admin@billmint.com
MASTER_ADMIN_PASSWORD=yourMasterAdminPassword

# support admin configuration
SUPPORT_ADMIN_EMAIL=support@billmint.com
SUPPORT_ADMIN_PASSWORD=yourSupportAdminPassword

# cloudinary configuration
CLOUDINARY_CLOUD_NAME=dkdgdabxr
CLOUDINARY_API_KEY=WMcDCNdmoEgLyXEXCwRF8BVzLOw
CLOUDINARY_API_SECRET=173483888379124

# gupshup configuration
GUPSHUP_API_KEY=bp1mlolk21fdxar0vci5dtkd2g7p4ovq
WHATSAPP_SOURCE_NUMBER=+1 555-798-8926
GUPSHUP_APP_NAME=billmint

# razorpay configuration
RAZORPAY_KEY_ID=rzp_test_pamtaJonEEph2p
RAZORPAY_KEY_SECRET=wNH46MjCOa8G2j6jnkmHZAJ6


# Adding health care featues on backend - testing credentials
# {
#     "email": "john.general@example.com",
#     "password": "password123"
# }
# {
#     "email": "clinic@example.com",
#     "password": "securepass"
# }


# make sure we need to fullfill the client needs, so be remember wht all details mention in client note we be present 


# ‚úÖ Perfect ‚Äî thanks for sharing the **client‚Äôs detailed requirements**.
# I‚Äôve carefully gone through them, and it‚Äôs very clear. Here‚Äôs a structured summary so we‚Äôre both on the same page.

# ---

# ## üìù Project Scope (Phase 1 - MVP)

# ### 1Ô∏è‚É£ User Management

# * **Admin Login**
# * **Receptionist/Staff Login**

#   * Same dashboard, restricted access (no separate dashboards).
# * **Secure PIN** to view sensitive info (like revenue reports).

# ---

# ### 2Ô∏è‚É£ Patient Management

# * **Add / Edit / View Patients**

#   * Name, Mobile, Address, Age, Gender
# * **Patient Visit History** linked to billing.

# ---

# ### 3Ô∏è‚É£ Appointment Scheduling

# * **Manual Appointment Creation**

#   * Patient, Date, Time, Service Type (selectable or text)
# * **Appointment Status:** Pending, Completed, Canceled
# * **Simple List View** (no calendar for now, maybe later)

# ---

# ### 4Ô∏è‚É£ Billing & Invoicing

# * **Service-based Billing**

#   * Multiple services per visit (Consultation, Tests, etc.)
# * **Optional discounts**
# * **Payment status & method**
# * **PDF Invoice generation**

#   * Clinic branding + optional GST
# * **Send Invoice via WhatsApp** (up to 300/month included)

# ---

# ### 5Ô∏è‚É£ Visit / Service History

# * **Patient-wise visit log**
# * **Summary of services & fees per visit**
# * **Export / Print (PDF, CSV)**

# ---

# ### 6Ô∏è‚É£ IPD (In-Patient Department) Basic

# * **Admit Patient**

#   * Assign to bed manually
# * **Per-day charges** (editable)
# * **Additional service charges**
# * **Discharge:**

#   * Auto-calculate stay + service charges
#   * Printable Discharge Summary (PDF)

# ---

# ### 7Ô∏è‚É£ Income Reports

# * **Daily, Weekly, Monthly income**
# * **Basic service-wise income report**
# * **Exportable (CSV)**

# ---

# ### 8Ô∏è‚É£ Settings

# * **Clinic Profile:** Name, Logo, Address, GST No.
# * **Service Master:** Add/Edit services & set prices.

# ---

# ## üöÄ Tech Approach: Reusing `billrest general`

# ‚úÖ You‚Äôll **reuse your existing billing software‚Äôs code** for:

# * **Billing & invoice module** (adapt to service + patient context)
# * **Income reports module** (just link to healthcare data)
# * **PDF generation & WhatsApp sending**

# ‚úÖ New things needed:

# * **Patient management CRUD**
# * **Appointment scheduling table + logic**
# * **IPD table + stay charge calculation + discharge summary**
# * **Service list & pricing linked to patient bills**

# ---

# ## üí° Suggested next steps

# üëâ **Database schema design:**

# * We‚Äôll reuse your `invoices` & `services` tables with modifications, and add:

#   * `patients`
#   * `appointments`
#   * `ipd_admissions`
#   * maybe extra fields in `invoices` (like patient\_id, visit\_date).

# üëâ **Role permissions:**

# * Same user system, just add `role` & restrict routes/pages.

# üëâ **Frontend:**

# * Reuse existing components (forms, tables, PDF preview, etc).
# * Build new pages for **patient management**, **appointments**, **IPD**.

# üëâ **Timeline:**
# We can break it into:

# 1. Patient & service master
# 2. Appointments
# 3. Billing & link to patient history
# 4. IPD admission / discharge
# 5. Income reports
# 6. Settings

# ---

# ‚úÖ **If you want**, I can now:

# * Prepare a **full database schema (tables + relations)**
# * Write a **rough API endpoints plan (CRUD + reports + auth + PDFs)**
# * Even sketch the **frontend routes/components** for you.

# Tell me what you‚Äôd like first, and we‚Äôll nail it down together. üöÄ
